?pitr::pitdb_process_data_downloads
library(lubridate)
t <- hms::as_hms(85)
t
class(t)
str(t)
`?hms`
library(lubridate)
?lubridate::hms
hours(7)
p = hours(7)
class(p)
?hms
ms("09:10")
hms("09:10")
hms("09:10:00")
difftime(hms("09:10:00"), now())
?difftime
hms("09:10:00") - now()
?now
time(now())
?time
as_hms(now())
hms::as_hms(now())
library(hms)
as_hms(nowIO)
as_hms(now())
as_hms(now()) > hms("09"10"00")
as_hms(now()) > hms("09:10:00")
x <- as_hms(now())
x
class(x)
as.difftime(x)
class(as.difftime(x))
as.integer(x)
as.integer(as_hms(now())) > as.integer(hms("09:10:00"))
as.integer(as_hms(now()))
as.integer(hms("09:10:00"))
?hms
lubridate::hms("09:10:00")
as.integer(lubridate::hms("09:10:00"))
class(lubridate::hms("09:10:00"))
hms(9, 10, 0)
hms(hours = 9, minutes = 10)
as.integer(hms(hours = 9, minutes = 10))
x <- period(c(9,10,0), c("hour", "minute", "second"))
x
class(now())
as.period(now())
y <- period(c(9,10,10), c("hour", "minute", "second"))
x < y
class(now())
n <- now()
?as.POSIXct
as.POSIXct("2022-05-15")
n
as.POSIXct("2022-05-15") + lubridate::hms("09:10:00")
day()
day(n)
year(n)
?sprintf
as.POSIXct("2022-2-4")
as.POSIXct(sprintf("%d:%d:%d", year(n), mont(n), day(n))) + lubridate::hms("09:10:00")
as.POSIXct(sprintf("%d:%d:%d", year(n), month(n), day(n))) + lubridate::hms("09:10:00")
as.POSIXct(sprintf("%d:%d:%d", year(n), month(n), day(n)), format = "%Y:%m:%d") + lubridate::hms("09:10:00")
now() + day(1)
now() + days(1)
year(now() + days(1))
sleep_time <- "09:10:00"
# In this case sleep_time is of the form "H:M:S" to wake up each day.
# Need to check and see how long until that time. If difference is negative, then
# wake tomorrow at that time.
n <- now()
normal_wake_time <- as.POSIXct(sprintf("%d:%d:%d", lubridate::year(n),lubridate::month(n),
lubridate::day(n)),
format = "%Y:%m:%d") + lubridate::hms(sleep_time)
class(normal_wake_time)
class(n)
n - normal_wake_time
normal_wake_time - n
dff <- normal_wake_time - n
as.seconds(dff)
seconds(dff)
as.difftime(dff, units = "seconds")
as.difftime(dff, format = "%S")
as.difftime(dff, format = "%s)
as.difftime(dff, format = "%s")
class(dff)
as.integer(dff)
dff <- difftime(normal_wake_time, n, units = "seconds")
dff <- difftime(normal_wake_time, n, units = "secs")
dff
as.numeric(dff)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
?pitr_pull_from_repo
library(pitr)
library(pitr)
?pitr_pull_from_repo
library(pitr)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
?fileSnapshot
library(pitr)
library(pitr)
library(pitr)
library(pitr)
?pull
?extract
equals
magrittr::equals
?changedFiles
library(pitr)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
library(pitr)
